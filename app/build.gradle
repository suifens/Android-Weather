apply plugin: 'com.android.application'

android {

    signingConfigs {
        config {
            keyAlias 'weather'
            keyPassword 'Tq123456'
            storeFile file('../archive/weather.jks')
            storePassword 'Tq123456'
        }
    }

    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.goodtech.tq"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 137
        versionName "4.2.0"
        signingConfig signingConfigs.config

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    flavorDimensions "default"
    productFlavors {
        xiaomi {
            manifestPlaceholders=[app_name:"天气预报-天气", umeng_channel:"xiaomi"];
        }
        huawei {
            manifestPlaceholders=[app_name:"天气预报", umeng_channel:"huawei"]
        }
        oppo {
            manifestPlaceholders=[app_name:"天气预报预知天气", umeng_channel:"oppo"]
        }
        vivo {
            manifestPlaceholders=[app_name:"天气十天气预报", umeng_channel:"vivo"]
        }
        yyb {
            manifestPlaceholders=[app_name:"预知天气预报", umeng_channel:"yyb"]
        }
        meizu {
            manifestPlaceholders=[app_name:"天气：天气预报", umeng_channel:"meizu"]
        }
    }

    def fileArray = []
    // 自定义APK安装包名
    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                outputFileName = "${defaultConfig.applicationId}-${getTime()}.apk"
            }
    }

    build {
        //build命令加入这段代码
        doLast() {
            //遍历文件数组并进行操作
            outforEachFile(fileArray)
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

}

static def getTime() {
    return new Date().format("yyMMdd", TimeZone.getDefault())
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

    //noinspection GradleCompatible
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    //noinspection GradleCompatible
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    //noinspection GradleCompatible
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
//    implementation 'org.litepal.android:core:1.4.1'
    //网络加载图片工具
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    // umeng
    implementation 'com.umeng.umsdk:common:2.2.5'
    implementation 'com.umeng.umsdk:analytics:8.1.6'
    implementation 'com.umeng.umsdk:utdid:1.1.5.3'
    //网络请求
    implementation("com.squareup.okhttp3:okhttp:4.7.2")
    implementation("com.squareup.okio:okio:2.6.0")
    implementation 'com.google.code.gson:gson:2.8.6'
    //eventbus
    implementation 'org.greenrobot:eventbus:3.2.0'

    implementation 'com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:1.0.0'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.2'
}
